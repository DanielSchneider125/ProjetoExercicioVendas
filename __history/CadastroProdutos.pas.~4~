unit CadastroProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error,
  FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Vcl.StdCtrls, Vcl.DBCtrls,
  Vcl.Mask, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ExtCtrls, FireDAC.UI.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.VCLUI.Wait;

type
  TFProdutos = class(TForm)
    PnFundo: TPanel;
    TBProdutos: TFDTable;
    TBProdutosID: TIntegerField;
    TBProdutosNome: TStringField;
    TBProdutosDescricao: TStringField;
    TBProdutosCusto: TCurrencyField;
    TBProdutosMargem: TCurrencyField;
    DSProdutos: TDataSource;
    LbID: TLabel;
    EdID: TDBEdit;
    LbNome: TLabel;
    EdNome: TDBEdit;
    LbDescricao: TLabel;
    LbCusto: TLabel;
    EdCusto: TDBEdit;
    LbMargem: TLabel;
    EdMargem: TDBEdit;
    MnDescricao: TDBMemo;
  private
    FDBConexao: TFDConnection;
  public
    constructor Create(DB: TFDConnection; ID: Integer = 0); reintroduce;
  end;

var
  FProdutos: TFProdutos;

implementation

{$R *.dfm}
{ TFProdutos }

constructor TFProdutos.Create(DB: TFDConnection; ID: Integer = 0);
begin
  Create(nil);
  TBProdutos.Connection := DB;

  if ID > 0 then
  begin
    TBProdutos.First;
    while not TBProdutos.Eof do
    begin
      if TBProdutos['id'] = ID then
        break;
      TBProdutos.Next;
    end;
    TBProdutos.Edit;
  end
  else
    TBProdutos.Append;
end;

end.
